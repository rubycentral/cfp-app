#proposal
  .row
    .col-md-8
      %h3
        = link_to proposal.event.name, event_path(slug: proposal.event.slug)
        = ", "
        = proposal.event.start_date.to_s(:month_day_year)
      %h1
        = proposal.title
    .col-md-4
      - if proposal.has_speaker?(current_user)
        .toolbox.pull-right
          .clearfix
            - unless proposal.withdrawn? || proposal.accepted? || proposal.confirmed?
              = link_to edit_proposal_path(slug: event.slug, uuid: proposal), class: 'btn btn-primary' do
                %span.glyphicon.glyphicon-edit
                Edit
              -if proposal.has_reviewer_activity?
                = proposal.withdraw_button
              -else
                = link_to proposal_path, method: :delete, data: {confirm: 'This will delete your talk. Are you sure you want to do this? It can not be undone.'}, class: 'btn btn-warning', id: 'delete' do
                  %span.glyphicon.glyphicon-exclamation-sign
                  Delete Proposal
          %h5.margin-top
            CFP closes
            = event.closes_at(:month_day_year)
  .row
    .col-md-12.tags= proposal.tags

  .row
    .col-md-4
      = render partial: 'proposals/contents', locals: { proposal: proposal }

    .col-md-4
      %h3 Speakers
      = render proposal.speakers

      - if (proposal.has_speaker?(current_user))
        %h3 Invited Speakers
        - invitations.each do |invitation|
          .clearfix
            %ul.invitation
              %li
                = invitation.state_label
                = invitation.email
                .pull-right
                  = link_to 'Resend',
                    resend_invitation_path(invitation_slug: invitation.slug),
                    method: :post,
                    class: 'btn btn-xs btn-primary',
                    disabled: !invitation.pending?
                  = link_to 'Remove',
                    invitation_path(invitation_slug: invitation.slug),
                    method: :delete,
                    class: 'btn btn-xs btn-danger',
                    disabled: !invitation.pending?,
                    data: {confirm: 'Are you sure you want to remove this invitation?'}

        = form_tag invitations_path(proposal_uuid: proposal.uuid), class: 'form-inline speaker' do
          %h3 Invite a Speaker
          = email_field_tag :email, '', placeholder: "Enter an email address.", class: 'form-control'
          %button.btn.btn-success(type="submit")
            %span.glyphicon.glyphicon-envelope
            Invite
    .col-md-4
      %h3 Reviewer Activity
      %p
        = pluralize(proposal.ratings.count, 'review')
        = proposal.public_state

      %h3 Comments
      = render partial: 'proposals/comments',
        locals: { proposal: proposal, comments: proposal.public_comments }
