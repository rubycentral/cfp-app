.event
  .row
    %header
      .col-sm-2
        %h2= event
      .col-sm-7.col-sm-offset-3
        #event-actions-top.pull-right
          = link_to "Session Types", organizer_event_session_types_path(event), class: "btn btn-default"
          = link_to "Tracks", organizer_event_tracks_path(event), class: "btn btn-default"
          = link_to "Proposals", organizer_event_proposals_path(event), class: "btn btn-default"
          = link_to "Program", organizer_event_program_path(event), class: "btn btn-default"
          = link_to "Schedule", organizer_event_sessions_path(event), class: "btn btn-default"
          = link_to "Edit Event", edit_organizer_event_path(event), class: "btn btn-primary"
  .row
    .col-sm-4
      %h4 Event Details
      %dl.dl-horizontal
        %dt Url:
        %dd
          %a{ href: event.url }#{event.url}
        %dt Slug:
        %dd #{event.slug}
        %dt Email:
        %dd #{event.contact_email}
        %dt Guidelines:
        %dd
          -if event.guidelines.present?
            = event.guidelines.truncate(150, separator: /\s/)
          = link_to "Public guidelines", event_path(slug: event.slug)
          %p= link_to "Edit Guidelines", edit_organizer_event_path(:form => "guidelines_form"), class: "btn btn-primary"
      %dl.dl-horizontal
        %dt CFP Opens:
        %dd= event.cfp_opens

        %dt CFP Closes:
        %dd= event.cfp_closes

        .subset
          %dt Days Remaining:
          %dd #{event.cfp_days_remaining}

        %dt Event Start:
        %dd #{event.start_date.to_s(:month_day_year) unless event.start_date.blank?}

        %dt Event End:
        %dd #{event.end_date.to_s(:month_day_year) unless event.end_date.blank?}


    .col-sm-4
      %h4 Proposal Stats
      %dl.dl-horizontal
        %dt Total:
        %dd #{event.proposals.count}
        .subset
          %dt Reviewed:
          %dd #{event.proposals.rated.count} (#{event.reviewed_percent})
        %dt Accepted:
        %dd #{event.proposals.accepted.count}
        .subset
          %dt Confirmed:
          %dd #{event.proposals.accepted.confirmed.count} (#{event.confirmed_percent})
        .subset
          %dt Scheduled:
          %dd #{event.proposals.scheduled.count} (#{event.scheduled_percent})
        %dt Waitlisted:
        %dd #{event.proposals.waitlisted.count}
        .subset
          %dt Confirmed:
          %dd #{event.proposals.waitlisted.confirmed.count} (#{event.waitlisted_percent})
      %h4 Proposal Tags
      %dd=event.valid_proposal_tags
      %dl.dl-horizontal

      %h4 Review Tags
      %dd=event.valid_review_tags
      %dl.dl-horizontal
      %p= link_to "Edit Tags", edit_organizer_event_path(:form => "tags_form"), class: "btn btn-primary"

      %h4 Fields
      %dd=event.fields
      %p= link_to "Add Custom Field", edit_custom_fields_organizer_event_path(event), class: "btn btn-primary"


    .col-sm-4
      %h4 Tracks
      -if event.track_count.present?
        - event.track_count.sort_by{|k,v| v}.reverse.each_slice(8).to_a.each do |row|
          %ul#columns.list-inline
            -row.each do |name, count|
              %li
                .label.label-success
                  = name
                  = count
      -else
        %p No Tracks

    .col-sm-4
      %h4 Speaker Notifcations
      = link_to 'Edit Speaker Notifications', edit_organizer_event_path(:form => "speaker_notifications_form"), class: "btn btn-primary"
      %dt Accept:
      %dd=event.speaker_notification_emails['accept'].truncate(75, separator: /\s/)
      %dt Reject:
      %dd=event.speaker_notification_emails['reject'].truncate(75, separator: /\s/)
      %dt Waitlist:
      %dd=event.speaker_notification_emails['waitlist'].truncate(75, separator: /\s/)


  = render partial: 'participants',
    locals: { event: event, participants: participants,
      rating_counts: rating_counts }
